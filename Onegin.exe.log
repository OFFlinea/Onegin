
--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770F9F00 в функции puts(). Попытка прочесть данные по адресу 0xFBDA034B в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2828 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770F9F00 in C:\Windows\System32\msvcrt.dll: puts()

# 1 0x0042BF2A in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (103):

    101:     for (size_t i = 0; i < text->nstrings; i++) {
    102: 
=>  103:         printf("%s\n", text->strings_addresses[i]);
    104:     }
    105: }

# 2 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:47:06, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:47:12

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770F9F00 в функции puts(). Попытка прочесть данные по адресу 0xFBDA034B в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2828 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770F9F00 in C:\Windows\System32\msvcrt.dll: puts()

# 1 0x0042BF2A in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (103):

    101:     for (size_t i = 0; i < text->nstrings; i++) {
    102: 
=>  103:         printf("%s\n", text->strings_addresses[i]);
    104:     }
    105: }

# 2 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:47:06, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:47:12

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xE6F2FDD4 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x4120 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF24 in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (101):

     99:     for (size_t i = 0; i < text->nstrings; i++) {
    100: 
=>  101:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    102:     }
    103: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:49:21, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:49:27

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xE6F2FDD4 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x4120 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF24 in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (101):

     99:     for (size_t i = 0; i < text->nstrings; i++) {
    100: 
=>  101:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    102:     }
    103: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:49:21, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:49:27

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0x4A169AFF в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x1AB0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF30 in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (99):

     97:     for (size_t i = 0; i < text->nstrings; i++) {
     98: 
=>   99:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    100:     }
    101: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:53:25, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:53:31

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0x4A169AFF в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x1AB0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF30 in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (99):

     97:     for (size_t i = 0; i < text->nstrings; i++) {
     98: 
=>   99:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    100:     }
    101: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:53:25, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:53:31

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xE8D57A7F в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x436C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF3D in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (101):

     99:     for (size_t i = 0; i < text->nstrings; i++) {
    100: 
=>  101:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    102:     }
    103: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:54:55, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:55:01

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xE8D57A7F в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x436C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF3D in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (101):

     99:     for (size_t i = 0; i < text->nstrings; i++) {
    100: 
=>  101:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    102:     }
    103: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:54:55, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:55:01

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xDAFAF882 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x41E4 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF50 in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (102):

    100:     for (size_t i = 0; i < text->nstrings; i++) {
    101: 
=>  102:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    103:     }
    104: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:55:47, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:55:53

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xDAFAF882 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x41E4 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF50 in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (102):

    100:     for (size_t i = 0; i < text->nstrings; i++) {
    101: 
=>  102:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    103:     }
    104: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 12:55:47, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 12:55:53

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0x5F9485CC в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x39F8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF53 in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (102):

    100:     for (size_t i = 0; i < text->nstrings; i++) {
    101: 
=>  102:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    103:     }
    104: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:00:52, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:00:58

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0x5F9485CC в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x39F8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042BF53 in C:\CodeBlocks\Onegin\Onegin.exe: print_text() at C:/CodeBlocks/Onegin/Onegin.cpp (102):

    100:     for (size_t i = 0; i < text->nstrings; i++) {
    101: 
=>  102:         printf("указатель - %p, строка - %s\n", text->strings_addresses[i], text->strings_addresses[i]);
    103:     }
    104: }

# 3 0x0042BCE7 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (22):

     20:     char* buffer = file_read();
     21:     struct Text text = work_with_file(buffer);
=>   22:     print_text(&text);
     23: 
     24:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:00:52, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:00:58

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#109: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77998245 в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#28: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x357C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x77998245 in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 4 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 5 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 6 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 7 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 8 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 9 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#10 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#11 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#12 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#13 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#14 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#15 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#16 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#17 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#18 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#19 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#20 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#21 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#22 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#23 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#24 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#25 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#26 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#27 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#28 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#29 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#30 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#31 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#32 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#37 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#38 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#39 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#40 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#41 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#42 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#43 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#44 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#45 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#46 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#47 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#48 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#49 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#50 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#51 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#52 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#53 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#54 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#55 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#56 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#57 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#58 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#59 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#60 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#61 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:02:35, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:02:42

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#109: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77998245 в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#29: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x357C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x77998245 in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 4 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 5 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 6 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 7 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 8 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 9 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#10 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#11 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#12 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#13 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#14 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#15 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#16 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#17 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#18 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#19 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#20 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#21 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#22 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#23 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#24 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#25 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#26 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#27 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#28 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#29 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#30 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#31 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#32 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#37 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#38 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#39 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#40 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#41 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#42 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#43 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#44 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#45 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#46 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#47 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#48 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#49 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#50 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#51 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#52 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#53 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#54 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#55 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#56 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#57 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#58 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#59 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#60 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#61 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:02:35, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:02:42

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#111: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#30: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x357C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7580 in C:\Windows\System32\msvcrt.dll: malloc()
# 4 0x7798C685 in C:\Windows\SYSTEM32\ntdll.dll: LdrLoadAlternateResourceModuleEx()
# 5 0x779C2A16 in C:\Windows\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
# 6 0x7799DD52 in C:\Windows\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
# 7 0x779A1853 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
# 8 0x779A19C1 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
# 9 0x779A2265 in C:\Windows\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#10 0x7799E282 in C:\Windows\SYSTEM32\ntdll.dll: LdrLoadDll()
#11 0x7799EB2E in C:\Windows\SYSTEM32\ntdll.dll: RtlMultiByteToUnicodeSize()
#12 0x7799F939 in C:\Windows\SYSTEM32\ntdll.dll: LdrShutdownThread()
#13 0x7799FA25 in C:\Windows\SYSTEM32\ntdll.dll: LdrShutdownThread()

--------------------------------------------------
Стек вызовов TX:

# 0 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

# 1 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 2 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 3 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 4 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 5 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 6 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 7 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 8 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 9 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#10 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#11 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#12 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#13 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#14 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#15 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#16 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#17 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#18 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#19 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#20 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#21 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#22 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#23 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#24 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#25 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#26 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#27 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#28 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#29 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#30 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#31 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#32 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#33 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#34 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#35 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#36 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#37 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#38 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#39 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#40 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#41 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#42 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#43 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#44 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#45 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#46 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#47 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#48 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#49 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#50 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#51 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#52 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#53 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#54 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#55 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#56 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#57 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#58 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#59 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#60 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#61 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:02:35, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:02:42

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#112: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#31: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x357C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7580 in C:\Windows\System32\msvcrt.dll: malloc()
# 4 0x779AE58E in C:\Windows\SYSTEM32\ntdll.dll: RtlLockHeap()
# 5 0x779AE1E9 in C:\Windows\SYSTEM32\ntdll.dll: RtlLockHeap()
# 8 0x0057005C in C:\CodeBlocks\Onegin\Onegin.exe: register_frame_ctor()

--------------------------------------------------
Стек вызовов TX:

# 0 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

# 1 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

# 2 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 3 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 4 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 5 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 6 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 7 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 8 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 9 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#10 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#11 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#12 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#13 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#14 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#15 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#16 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#17 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#18 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#19 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#20 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#21 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#22 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#23 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#24 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#25 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#26 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#27 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#28 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#29 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#30 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#31 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#32 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#33 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#34 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#35 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#36 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#37 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#38 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#39 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#40 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#41 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#42 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#43 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#44 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#45 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#46 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#47 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#48 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#49 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#50 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#51 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#52 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#53 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#54 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#55 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#56 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#57 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#58 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#59 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#60 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#61 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:02:35, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:02:42

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#146: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#48: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x357C (Main), errno: 22 (Invalid argument). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 6 0x6625E76C in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 7 0x763DB534 in C:\Windows\System32\KERNELBASE.dll: WideCharToMultiByte()
# 8 0x763FAAE8 in C:\Windows\System32\KERNELBASE.dll: GetModuleHandleExA()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 4 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 5 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 6 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 7 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 8 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 9 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#10 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#11 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#12 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#13 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#14 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#15 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#16 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#17 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#18 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#19 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#20 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#21 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#22 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#23 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#24 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#25 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#26 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#27 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#28 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#29 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#30 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#31 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#32 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#37 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#38 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#39 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#40 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#41 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#42 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#43 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#44 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#45 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#46 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#47 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#48 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

#49 in const char* {anonymous}::TX::_txProcessError(const char*, int, const char*, unsigned int, const char*, va_list) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12562):

  12560: 
  12561:     if (stkTrace && strstr (stkTrace, ".exe: "))
=>12562:         {$ fprintf (stderr,    "Стек вызовов:\n\n"
  12563:                                "%s\n\n"
  12564:                                "--------------------------------------------------\n",

#50 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

#51 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#52 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#53 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#54 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#55 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#56 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#57 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#58 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#59 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#60 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#61 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:02:35, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:02:43

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#109: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77998245 в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#28: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x1EB0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x77998245 in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 4 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 5 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 6 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 7 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 8 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 9 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#10 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#11 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#12 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#13 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#14 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#15 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#16 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#17 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#18 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#19 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#20 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#21 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#22 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#23 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#24 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#25 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#26 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#27 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#28 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#29 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#30 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#31 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#32 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#37 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#38 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#39 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#40 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#41 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#42 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#43 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#44 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#45 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#46 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#47 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#48 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#49 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#50 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#51 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#52 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#53 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#54 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#55 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#56 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#57 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#58 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#59 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#60 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#61 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:04:13

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#109: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77998245 в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#29: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x1EB0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x77998245 in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 4 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 5 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 6 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 7 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 8 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 9 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#10 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#11 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#12 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#13 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#14 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#15 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#16 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#17 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#18 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#19 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#20 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#21 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#22 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#23 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#24 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#25 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#26 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#27 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#28 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#29 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#30 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#31 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#32 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#37 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#38 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#39 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#40 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#41 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#42 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#43 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#44 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#45 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#46 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#47 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#48 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#49 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#50 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#51 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#52 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#53 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#54 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#55 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#56 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#57 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#58 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#59 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#60 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#61 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:04:13

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#111: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#30: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x1EB0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7580 in C:\Windows\System32\msvcrt.dll: malloc()
# 4 0x7798C685 in C:\Windows\SYSTEM32\ntdll.dll: LdrLoadAlternateResourceModuleEx()
# 5 0x779C2A16 in C:\Windows\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
# 6 0x7799DD52 in C:\Windows\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
# 7 0x779A1853 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
# 8 0x779A19C1 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
# 9 0x779A2265 in C:\Windows\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#10 0x7799E282 in C:\Windows\SYSTEM32\ntdll.dll: LdrLoadDll()
#11 0x7799EB2E in C:\Windows\SYSTEM32\ntdll.dll: RtlMultiByteToUnicodeSize()
#12 0x7799F939 in C:\Windows\SYSTEM32\ntdll.dll: LdrShutdownThread()
#13 0x7799FA25 in C:\Windows\SYSTEM32\ntdll.dll: LdrShutdownThread()

--------------------------------------------------
Стек вызовов TX:

# 0 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

# 1 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 2 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 3 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 4 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 5 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 6 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 7 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 8 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 9 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#10 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#11 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#12 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#13 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#14 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#15 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#16 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#17 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#18 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#19 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#20 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#21 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#22 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#23 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#24 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#25 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#26 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#27 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#28 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#29 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#30 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#31 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#32 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#33 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#34 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#35 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#36 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#37 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#38 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#39 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#40 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#41 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#42 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#43 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#44 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#45 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#46 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#47 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#48 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#49 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#50 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#51 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#52 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#53 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#54 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#55 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#56 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#57 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#58 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#59 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#60 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#61 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:04:14

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#115: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#32: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x1EB0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 6 0x6625E76C in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 7 0x763DB534 in C:\Windows\System32\KERNELBASE.dll: WideCharToMultiByte()
# 8 0x763FAAE8 in C:\Windows\System32\KERNELBASE.dll: GetModuleHandleExA()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

# 4 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

# 5 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

# 6 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 7 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 8 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 9 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#10 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#11 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#12 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#13 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#14 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#15 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#16 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#17 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#18 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#19 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#20 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#21 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#22 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#23 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#24 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#25 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#26 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#27 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#28 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#29 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#30 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#31 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#32 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#33 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#34 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#35 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#36 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#37 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#38 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#39 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#40 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#41 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#42 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#43 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#44 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#45 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#46 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#47 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#48 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#49 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#50 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#51 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#52 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#53 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#54 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#55 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#56 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#57 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#58 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#59 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#60 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#61 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:04:13

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#149: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6626DDFF в функции SymGetLineFromAddrW64(). Попытка прочесть данные по адресу 0xFC458BFC в модуле c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#49: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x1EB0 (Main), errno: 22 (Invalid argument). 

--------------------------------------------------
Стек вызовов:

# 0 0x6626DDFF in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 2 0x66244BF7 in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 4 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 5 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 6 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 7 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 8 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 9 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#10 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#11 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#12 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#13 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#14 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#15 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#16 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#17 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#18 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#19 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#20 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#21 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#22 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#23 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#24 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#25 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#26 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#27 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#28 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#29 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#30 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#31 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#32 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#37 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#38 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#39 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#40 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#41 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#42 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#43 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#44 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#45 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#46 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#47 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#48 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#49 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#50 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#51 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

#52 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#53 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#54 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#55 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#56 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

#57 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

#58 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#59 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#60 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#61 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:04:14

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#109: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77998245 в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#28: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2A50 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x77998245 in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 4 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 5 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 6 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 7 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 8 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 9 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#10 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#11 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#12 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#13 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#14 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#15 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#16 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#17 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#18 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#19 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#20 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#21 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#22 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#23 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#24 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#25 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#26 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#27 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#28 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#29 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#30 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#31 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#32 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#37 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#38 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#39 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#40 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#41 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#42 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#43 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#44 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#45 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#46 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#47 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#48 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#49 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#50 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#51 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#52 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#53 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#54 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#55 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#56 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#57 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#58 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#59 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#60 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#61 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:06:22

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#109: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77998245 в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#29: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2A50 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x77998245 in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 4 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 5 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 6 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 7 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 8 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 9 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#10 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#11 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#12 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#13 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#14 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#15 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#16 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#17 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#18 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#19 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#20 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#21 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#22 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#23 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#24 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#25 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#26 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#27 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#28 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#29 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#30 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#31 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#32 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#37 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#38 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#39 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#40 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#41 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#42 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#43 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#44 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#45 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#46 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#47 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#48 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#49 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#50 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#51 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#52 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#53 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#54 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#55 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#56 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#57 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#58 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#59 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#60 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#61 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:06:23

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#111: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#30: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2A50 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7580 in C:\Windows\System32\msvcrt.dll: malloc()
# 4 0x7798C685 in C:\Windows\SYSTEM32\ntdll.dll: LdrLoadAlternateResourceModuleEx()
# 5 0x779C2A16 in C:\Windows\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
# 6 0x7799DD52 in C:\Windows\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
# 7 0x779A1853 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
# 8 0x779A19C1 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
# 9 0x779A2265 in C:\Windows\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#10 0x7799E282 in C:\Windows\SYSTEM32\ntdll.dll: LdrLoadDll()
#11 0x7799EB2E in C:\Windows\SYSTEM32\ntdll.dll: RtlMultiByteToUnicodeSize()
#12 0x7799F939 in C:\Windows\SYSTEM32\ntdll.dll: LdrShutdownThread()
#13 0x7799FA25 in C:\Windows\SYSTEM32\ntdll.dll: LdrShutdownThread()

--------------------------------------------------
Стек вызовов TX:

# 0 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

# 1 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 2 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 3 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 4 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 5 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 6 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 7 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 8 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 9 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#10 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#11 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#12 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#13 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#14 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#15 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#16 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#17 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#18 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#19 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#20 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#21 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#22 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#23 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#24 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#25 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#26 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#27 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#28 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#29 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#30 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#31 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#32 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#33 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#34 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#35 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#36 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#37 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#38 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#39 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#40 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#41 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#42 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#43 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#44 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#45 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#46 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#47 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#48 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#49 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#50 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#51 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#52 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#53 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#54 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#55 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#56 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#57 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#58 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#59 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#60 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#61 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:06:23

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#112: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#31: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2A50 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7580 in C:\Windows\System32\msvcrt.dll: malloc()
# 4 0x779AE58E in C:\Windows\SYSTEM32\ntdll.dll: RtlLockHeap()
# 5 0x779AE1E9 in C:\Windows\SYSTEM32\ntdll.dll: RtlLockHeap()
# 8 0x0057005C in C:\CodeBlocks\Onegin\Onegin.exe: register_frame_ctor()

--------------------------------------------------
Стек вызовов TX:

# 0 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

# 1 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

# 2 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 3 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 4 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 5 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

# 6 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

# 7 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 8 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 9 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#10 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#11 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#12 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#13 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#14 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#15 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#16 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#17 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#18 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#19 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#20 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#21 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#22 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#23 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#24 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#25 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#26 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#27 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#28 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#29 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#30 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#31 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#32 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#33 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#34 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#35 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#36 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#37 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#38 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#39 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#40 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#41 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#42 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#43 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#44 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#45 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#46 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#47 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#48 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#49 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#50 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#51 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#52 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#53 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#54 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#55 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#56 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#57 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#58 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#59 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#60 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#61 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:06:22

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#148: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#49: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2A50 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 6 0x6625E76C in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 7 0x763DB534 in C:\Windows\System32\KERNELBASE.dll: WideCharToMultiByte()
# 9 0x770D6BDC in C:\Windows\System32\msvcrt.dll: _crtGetStringTypeW()
#10 0x770D6C64 in C:\Windows\System32\msvcrt.dll: _crtLCMapStringA()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

# 4 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 5 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 6 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 7 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 8 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 9 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#10 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#11 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#12 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#13 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#14 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#15 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#16 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#17 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#18 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#19 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#20 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#21 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#22 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#23 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#24 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#25 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#26 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#27 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#28 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#29 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#30 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#31 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#32 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#33 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#34 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#35 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#36 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#37 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#38 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#39 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#40 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#41 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#42 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#43 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#44 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#45 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#46 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#47 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#48 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#49 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#50 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#51 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#52 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

#53 in const char* {anonymous}::TX::_txProcessError(const char*, int, const char*, unsigned int, const char*, va_list) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12562):

  12560: 
  12561:     if (stkTrace && strstr (stkTrace, ".exe: "))
=>12562:         {$ fprintf (stderr,    "Стек вызовов:\n\n"
  12563:                                "%s\n\n"
  12564:                                "--------------------------------------------------\n",

#54 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

#55 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#56 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#57 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#58 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#59 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#60 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#61 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:04:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:06:23

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#105: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#26: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x3D1C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 6 0x66245781 in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 7 0x763D0928 in C:\Windows\System32\KERNELBASE.dll: LCMapStringEx()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 4 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 5 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 6 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 7 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 8 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 9 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#10 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#11 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#12 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#13 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#14 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#15 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#16 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#17 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#18 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#19 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#20 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#21 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#22 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#23 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#24 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#25 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#26 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#27 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#28 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#29 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#30 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#31 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#32 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#37 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#38 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#39 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#40 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#41 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#42 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#43 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#44 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#45 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#46 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#47 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#48 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#49 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#50 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#51 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#52 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#53 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#54 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#55 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#56 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#57 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#58 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#59 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#60 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#61 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:07:24, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:07:30

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#105: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7799789E в функции RtlAllocateHeap(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Также превышен лимит фатальных исключений _TX_FATAL_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#27: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x3D1C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7799789E in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7BEC in C:\Windows\System32\msvcrt.dll: realloc()
# 4 0x770C72DA in C:\Windows\System32\msvcrt.dll: calloc()
# 5 0x66244B9B in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 6 0x66245781 in c:\codeblocks\codeblocks\mingw\include\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 7 0x763D0928 in C:\Windows\System32\KERNELBASE.dll: LCMapStringEx()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 4 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 5 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

# 6 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 7 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

# 8 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 9 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#10 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#11 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#12 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#13 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#14 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#15 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#16 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#17 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#18 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#19 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#20 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#21 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#22 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#23 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#24 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#25 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#26 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#27 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#28 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#29 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#30 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#31 in intptr_t {anonymous}::TX::_txReadSource(char*, intptr_t, const char*, int, int, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12323):

  12321:     if (!f) {$ return 0; }
  12322: 
=>12323: $   int n = 1;
  12324:     while (!feof (f))
  12325:         {

#32 in const char* {anonymous}::TX::_txCaptureStackBackTraceTX(int, bool) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12394):

  12392:                 {
  12393: $               s += _tx_snprintf_s (s, SZ_, ":\n\n");
=>12394: $               s += _txReadSource  (s, SZ_, loc->file, loc->line - 2, loc->line + 2, loc->line);
  12395:                 }
  12396:             }

#33 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#34 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#35 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#36 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10452):

  10450: $   if (wLocale && !wine)
  10451:         {
=>10452: $       _wsetlocale (LC_ALL,     wLocale);
  10453: $       _wsetlocale (LC_NUMERIC, L"C");           // L"C" (see above)
  10454:         }

#37 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#38 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#39 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#40 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#41 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#42 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#43 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#44 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#45 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#46 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#47 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#48 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#49 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#50 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#51 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#52 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#53 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#54 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#55 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#56 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#57 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#58 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, EXCEPTION_POINTERS*, HANDLE) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11982):

  11980: $       bool                    inTX   = false;
  11981: 
=>11982:         if (addr)                {$ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
  11983:         if (readSource && !inTX) {$        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }  //-V566
  11984: 

#59 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11478):

  11476: $       unsigned err = GetLastError();
  11477: 
=>11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
  11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

#60 in int {anonymous}::TX::txSetLocale(int, const char*, const wchar_t*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (10442):

  10440: $   if (locale)
  10441:         {
=>10442: $       setlocale (LC_ALL,     locale);
  10443: $       setlocale (LC_NUMERIC, "C");              // Return to decimal point (3.14) instead of comma (3,14) in floating numbers
  10444:         }

#61 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 13:07:24, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 13:07:31

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 47, функция: bool file_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "text->buffer".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x4690 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BD65 in C:\CodeBlocks\Onegin\Onegin.exe: file_read() at C:/CodeBlocks/Onegin/Onegin.cpp (47):

     45: bool file_read(struct Text* text) {
     46: 
=>   47:     assert(text->buffer);
     48:     assert(text->strings_addresses);
     49: 

# 1 0x0042BCEA in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (34):

     32:     struct Text text = {};
     33: 
=>   34:     file_read(&text);
     35: 
     36:     text_read(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:16:28, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:16:34

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 49, функция: bool file_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "text->buffer".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x92C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BD79 in C:\CodeBlocks\Onegin\Onegin.exe: file_read() at C:/CodeBlocks/Onegin/Onegin.cpp (49):

     47: bool file_read(struct Text* text) {
     48: 
=>   49:     assert(text->buffer);
     50:     assert(text->strings_addresses);
     51: 

# 1 0x0042BCFE in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     printf("%d\n", text.buffer);
     35: 
=>   36:     file_read(&text);
     37: 
     38:     text_read(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:18:13, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:18:19

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 76, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "text->strings_addresses".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x29BC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BECA in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (76):

     74: 
     75:     assert(text->buffer);
=>   76:     assert(text->strings_addresses);
     77: 
     78:     text->strings_addresses = (char**) calloc(text->nstrings, sizeof(char*));

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:18:40, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:18:46

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 95, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string < text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x3B88 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFAB in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (95):

     93:         if (text->buffer[number_char] == '\n') {
     94: 
=>   95:             assert(number_string < text->nstrings);
     96: 
     97:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:20:26, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:20:31

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 95, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string <= text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2954 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFAB in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (95):

     93:         if (text->buffer[number_char] == '\n') {
     94: 
=>   95:             assert(number_string <= text->nstrings);
     96: 
     97:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:21:19, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:21:25

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 97, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string <= text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2620 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFC1 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (97):

     95:         if (text->buffer[number_char] == '\n') {
     96: 
=>   97:             assert(number_string <= text->nstrings);
     98: 
     99:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:22:13, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:22:19

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 95, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string <= text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x18C4 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFAB in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (95):

     93:         if (text->buffer[number_char] == '\n') {
     94: 
=>   95:             assert(number_string <= text->nstrings);
     96: 
     97:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:23:13, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:23:19

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 95, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string <= text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x33F8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFAB in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (95):

     93:         if (text->buffer[number_char] == '\n') {
     94: 
=>   95:             assert(number_string <= text->nstrings);
     96: 
     97:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:27:16, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:27:22

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 95, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string <= text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x440C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFA1 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (95):

     93:         if (text->buffer[number_char] == '\n') {
     94: 
=>   95:             assert(number_string <= text->nstrings);
     96: 
     97:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:29:30, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:29:36

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 99, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string < text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x2CD4 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFA8 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (99):

     97:         if (text->buffer[number_char] == '\n') {
     98: 
=>   99:             assert(number_string < text->nstrings);
    100: 
    101:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:51:33, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:51:39

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 99, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string < text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x4794 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFA8 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (99):

     97:         if (text->buffer[number_char] == '\n') {
     98: 
=>   99:             assert(number_string < text->nstrings);
    100: 
    101:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:53:04, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:53:10

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 99, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string < text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x3600 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFA8 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (99):

     97:         if (text->buffer[number_char] == '\n') {
     98: 
=>   99:             assert(number_string < text->nstrings);
    100: 
    101:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:53:04, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:53:22

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 99, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string < text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0xC28 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFA8 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (99):

     97:         if (text->buffer[number_char] == '\n') {
     98: 
=>   99:             assert(number_string < text->nstrings);
    100: 
    101:             text->buffer[number_char] = '\0';

# 1 0x0042BCF6 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (36):

     34:     file_read(&text);
     35: 
=>   36:     text_read(&text);
     37:     print_text(&text);
     38:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:53:28, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:53:34

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#15: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x763FD8C2 в функции RaiseException() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x27EC (Main), GetLastError(): 8 (Недостаточно ресурсов памяти для обработки этой команды), errno: 12 (Visual C++ CRT: Not enough memory to complete call to strerror.). 

--------------------------------------------------
Стек вызовов:

# 0 0x763FD8C2 in C:\Windows\System32\KERNELBASE.dll: RaiseException()
# 1 0x770BA718 in C:\Windows\System32\msvcrt.dll: CxxThrowException()
# 2 0x72F5611A in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: MiniDumpReadDumpStream()
# 3 0x72EFDD3F in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: RemoveInvalidModuleList()
# 4 0x72F1C070 in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: ImagehlpApiVersionEx()
# 5 0x72F1ACDE in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: ImagehlpApiVersionEx()
# 6 0x72F1A985 in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: ImagehlpApiVersionEx()
# 7 0x72F1224A in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: SymEnumerateSymbolsW64()
# 8 0x72F158BA in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: SymFromInlineContext()
# 9 0x72F1590E in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: SymFromAddr()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 1 in intptr_t {anonymous}::TX::_txDumpExceptionSEH(char*, intptr_t, const EXCEPTION_RECORD*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11609):

  11607: $   Win32::IMAGEHLP_LINE64* line = NULL;
  11608: 
=>11609:     if (addr) {$ _txSymGetFromAddr (addr, &sym, &line); }
  11610: 
  11611: $   if (sym  &&                   *sym->Name)      PRINT_ (" в функции %s()", sym->Name);

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11480):

  11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
=>11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);
  11481: $       _tx_snprintf_s      (_txTraceSE, (intptr_t) sizeof (_txTraceSE) - 1, "%s", stackTrace);
  11482: 

# 3 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 4 in intptr_t {anonymous}::TX::_txDumpExceptionSEH(char*, intptr_t, const EXCEPTION_RECORD*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11609):

  11607: $   Win32::IMAGEHLP_LINE64* line = NULL;
  11608: 
=>11609:     if (addr) {$ _txSymGetFromAddr (addr, &sym, &line); }
  11610: 
  11611: $   if (sym  &&                   *sym->Name)      PRINT_ (" в функции %s()", sym->Name);

# 5 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11480):

  11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
=>11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);
  11481: $       _tx_snprintf_s      (_txTraceSE, (intptr_t) sizeof (_txTraceSE) - 1, "%s", stackTrace);
  11482: 

# 6 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

# 7 in intptr_t {anonymous}::TX::_txDumpExceptionSEH(char*, intptr_t, const EXCEPTION_RECORD*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11609):

  11607: $   Win32::IMAGEHLP_LINE64* line = NULL;
  11608: 
=>11609:     if (addr) {$ _txSymGetFromAddr (addr, &sym, &line); }
  11610: 
  11611: $   if (sym  &&                   *sym->Name)      PRINT_ (" в функции %s()", sym->Name);

# 8 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11480):

  11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
=>11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);
  11481: $       _tx_snprintf_s      (_txTraceSE, (intptr_t) sizeof (_txTraceSE) - 1, "%s", stackTrace);
  11482: 

# 9 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#10 in intptr_t {anonymous}::TX::_txDumpExceptionSEH(char*, intptr_t, const EXCEPTION_RECORD*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11609):

  11607: $   Win32::IMAGEHLP_LINE64* line = NULL;
  11608: 
=>11609:     if (addr) {$ _txSymGetFromAddr (addr, &sym, &line); }
  11610: 
  11611: $   if (sym  &&                   *sym->Name)      PRINT_ (" в функции %s()", sym->Name);

#11 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11480):

  11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
=>11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);
  11481: $       _tx_snprintf_s      (_txTraceSE, (intptr_t) sizeof (_txTraceSE) - 1, "%s", stackTrace);
  11482: 

#12 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#13 in intptr_t {anonymous}::TX::_txDumpExceptionSEH(char*, intptr_t, const EXCEPTION_RECORD*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11609):

  11607: $   Win32::IMAGEHLP_LINE64* line = NULL;
  11608: 
=>11609:     if (addr) {$ _txSymGetFromAddr (addr, &sym, &line); }
  11610: 
  11611: $   if (sym  &&                   *sym->Name)      PRINT_ (" в функции %s()", sym->Name);

#14 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11480):

  11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
=>11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);
  11481: $       _tx_snprintf_s      (_txTraceSE, (intptr_t) sizeof (_txTraceSE) - 1, "%s", stackTrace);
  11482: 

#15 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#16 in intptr_t {anonymous}::TX::_txDumpExceptionSEH(char*, intptr_t, const EXCEPTION_RECORD*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11609):

  11607: $   Win32::IMAGEHLP_LINE64* line = NULL;
  11608: 
=>11609:     if (addr) {$ _txSymGetFromAddr (addr, &sym, &line); }
  11610: 
  11611: $   if (sym  &&                   *sym->Name)      PRINT_ (" в функции %s()", sym->Name);

#17 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11480):

  11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
=>11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);
  11481: $       _tx_snprintf_s      (_txTraceSE, (intptr_t) sizeof (_txTraceSE) - 1, "%s", stackTrace);
  11482: 

#18 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12232):

  12230: $       unsigned long long ofs = 0;
  12231: 
=>12232: $       _TX_CALL (LIB_::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym));
  12233: 
  12234:         if (strcmp (sym->Name, "??") == 0) {$ *sym->Name = 0; }

#19 in intptr_t {anonymous}::TX::_txDumpExceptionSEH(char*, intptr_t, const EXCEPTION_RECORD*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11609):

  11607: $   Win32::IMAGEHLP_LINE64* line = NULL;
  11608: 
=>11609:     if (addr) {$ _txSymGetFromAddr (addr, &sym, &line); }
  11610: 
  11611: $   if (sym  &&                   *sym->Name)      PRINT_ (" в функции %s()", sym->Name);

#20 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at c:\codeblocks\codeblocks\mingw\include\txlib.h (11480):

  11478: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord, exc);
  11479: 
=>11480: $       _txDumpExceptionSEH (_txDumpSE,  (intptr_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);
  11481: $       _tx_snprintf_s      (_txTraceSE, (intptr_t) sizeof (_txTraceSE) - 1, "%s", stackTrace);
  11482: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:54:17, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:54:23

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#15: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x в функции RaiseException(). Попытка прочесть данные по адресу 0x00000014 в модуле C:\Windows\SYSTEM32\ntdll.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x27EC (Main), errno: 12 (Visual C++ CRT: Not enough memory to complete call to strerror.). 

--------------------------------------------------
Стек вызовов:

# 0 0x763FD8C2 in C:\Windows\System32\KERNELBASE.dll: RaiseException()
# 1 0x770BA718 in C:\Windows\System32\msvcrt.dll: CxxThrowException()
# 2 0x72F5611A in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: MiniDumpReadDumpStream()
# 3 0x72EFDD3F in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: RemoveInvalidModuleList()
# 4 0x72F1C070 in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: ImagehlpApiVersionEx()
# 5 0x72F1ACDE in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: ImagehlpApiVersionEx()
# 6 0x72F1A985 in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: ImagehlpApiVersionEx()
# 7 0x72F1224A in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: SymEnumerateSymbolsW64()
# 8 0x72F158BA in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: SymFromInlineContext()
# 9 0x72F1590E in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: SymFromAddr()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:54:17, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:54:23

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#15: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x в функции RaiseException(). Попытка прочесть данные по адресу 0x00000014 в модуле C:\Windows\SYSTEM32\ntdll.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#3: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x27EC (Main), errno: 12 (Visual C++ CRT: Not enough memory to complete call to strerror.). 

--------------------------------------------------
Стек вызовов:

# 0 0x763FD8C2 in C:\Windows\System32\KERNELBASE.dll: RaiseException()
# 1 0x770BA718 in C:\Windows\System32\msvcrt.dll: CxxThrowException()
# 2 0x72F5611A in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: MiniDumpReadDumpStream()
# 3 0x72EFDD3F in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: RemoveInvalidModuleList()
# 4 0x72F1C070 in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: ImagehlpApiVersionEx()
# 5 0x72F1ACDE in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: ImagehlpApiVersionEx()
# 6 0x72F1A985 in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: ImagehlpApiVersionEx()
# 7 0x72F1224A in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: SymEnumerateSymbolsW64()
# 8 0x72F158BA in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: SymFromInlineContext()
# 9 0x72F1590E in c:\codeblocks\codeblocks\mingw\include\Windows\DbgHelp32.dll: SymFromAddr()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:54:17, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:54:23

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#17: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x779973A7 в функции RtlAllocateHeap(). Попытка прочесть данные по адресу 0x00750052 в модуле C:\Windows\SYSTEM32\ntdll.dll. Дополнительно, превышен лимит исключений _TX_EXCEPTIONS_LIMIT (16). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#4: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005042FC (32-bit), Flags: Cmdre0, Thread: 0x27EC (Main), GetLastError(): 298 (Слишком много попыток занесения события для семафора), errno: 12 (Visual C++ CRT: Not enough memory to complete call to strerror.). 

--------------------------------------------------
Стек вызовов:

# 0 0x779973A7 in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x77996E5C in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x77995DFE in C:\Windows\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x770C7580 in C:\Windows\System32\msvcrt.dll: malloc()
# 4 0x779C2A16 in C:\Windows\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
# 5 0x7799DD52 in C:\Windows\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
# 6 0x779A1853 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
# 7 0x779A19C1 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
# 8 0x779A19D8 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
# 9 0x779A19D8 in C:\Windows\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#10 0x779A2265 in C:\Windows\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#11 0x7799E282 in C:\Windows\SYSTEM32\ntdll.dll: LdrLoadDll()
#12 0x7799EB2E in C:\Windows\SYSTEM32\ntdll.dll: RtlMultiByteToUnicodeSize()
#13 0x7799F939 in C:\Windows\SYSTEM32\ntdll.dll: LdrShutdownThread()
#14 0x7799FA25 in C:\Windows\SYSTEM32\ntdll.dll: LdrShutdownThread()
#15 0x7799CC0B in C:\Windows\SYSTEM32\ntdll.dll: LdrResolveDelayLoadedAPI()
#16 0x779C2A7C in C:\Windows\SYSTEM32\ntdll.dll: NtWaitForSingleObject()
#17 0x763D8E89 in C:\Windows\System32\KERNELBASE.dll: WaitForSingleObjectEx()

--------------------------------------------------
Стек вызовов TX:

# 0 in int {anonymous}::TX::txMessageBox(const char*, const char*, unsigned int) at c:\codeblocks\codeblocks\mingw\include\txlib.h (12715):

  12713: 
  12714: $   HWND wnd = _txCanvas_Window;
=>12715: $   int  ret = MessageBoxW ((wnd && IsWindowVisible (wnd))? wnd : _TX_CALL (Win32::GetConsoleWindow,()),
  12716:                             textW, headerW, flags | MB_SETFOREGROUND | MB_TOPMOST);
  12717: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 11 2023 22:54:17, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 11 2023 22:54:23

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x771096B0 в функции strcmp(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x3E50 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x771096B0 in C:\Windows\System32\msvcrt.dll: strcmp()

# 1 0x0042C4EC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (221):

    219:     assert(strings_addresses);
    220: 
=>  221:     size_t mid = Partition(strings_addresses, left, right);
    222: 
    223:     Sort(strings_addresses, left, mid);

# 2 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:21:03, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:21:12

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x771096B0 в функции strcmp(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x3E50 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x771096B0 in C:\Windows\System32\msvcrt.dll: strcmp()

# 1 0x0042C4EC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (221):

    219:     assert(strings_addresses);
    220: 
=>  221:     size_t mid = Partition(strings_addresses, left, right);
    222: 
    223:     Sort(strings_addresses, left, mid);

# 2 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:21:03, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:21:12

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x771096B0 в функции strcmp(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x30D0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x771096B0 in C:\Windows\System32\msvcrt.dll: strcmp()

# 1 0x0042C4EF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (222):

    220:     assert(strings_addresses);
    221: 
=>  222:     size_t mid = Partition(strings_addresses, left, right);
    223: 
    224:     Sort(strings_addresses, left, mid);

# 2 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:22:46, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:22:58

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x771096B0 в функции strcmp(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x30D0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x771096B0 in C:\Windows\System32\msvcrt.dll: strcmp()

# 1 0x0042C4EF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (222):

    220:     assert(strings_addresses);
    221: 
=>  222:     size_t mid = Partition(strings_addresses, left, right);
    223: 
    224:     Sort(strings_addresses, left, mid);

# 2 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:22:46, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:22:58

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x771096B0 в функции strcmp(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0xBFC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x771096B0 in C:\Windows\System32\msvcrt.dll: strcmp()

# 1 0x0042C4EF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (222):

    220:     assert(strings_addresses);
    221: 
=>  222:     size_t mid = Partition(strings_addresses, left, right);
    223: 
    224:     Sort(strings_addresses, left, mid);

# 2 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:22:46, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:24:11

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x771096B0 в функции strcmp(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0xBFC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x771096B0 in C:\Windows\System32\msvcrt.dll: strcmp()

# 1 0x0042C4EF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (222):

    220:     assert(strings_addresses);
    221: 
=>  222:     size_t mid = Partition(strings_addresses, left, right);
    223: 
    224:     Sort(strings_addresses, left, mid);

# 2 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:22:46, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:24:11

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 184, функция: size_t Partition(char**, size_t, size_t),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "start <= right && right <= ends".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x30F4 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C45E in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (184):

    182: 
    183:         assert(start <= left && left <= ends);
=>  184:         assert(start <= right && right <= ends);
    185: 
    186:         if (strcmp(strings_addresses[left], strings_addresses[mid]) < 0) {

# 1 0x0042C5F3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     assert(strings_addresses);
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 2 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:27:50, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:28:02

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 184, функция: size_t Partition(char**, size_t, size_t),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "start <= right && right <= ends".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x1938 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C45E in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (184):

    182: 
    183:         assert(start <= left && left <= ends);
=>  184:         assert(start <= right && right <= ends);
    185: 
    186:         if (strcmp(strings_addresses[left], strings_addresses[mid]) < 0) {

# 1 0x0042C5F3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     assert(strings_addresses);
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 2 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:28:58, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:29:10

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Целочисленное деление на ноль.

#1: Исключение EXCEPTION_INT_DIVIDE_BY_ZERO (0xC0000094) при выполнении кода по адресу 0x0042C390 в функции Partition() в файле C:/CodeBlocks/Onegin/Onegin.cpp на строке 179 в модуле C:\CodeBlocks\Onegin\Onegin.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x864 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C390 in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (179):

    177:     size_t ends = right;
    178: 
=>  179:     size_t mid = left + rand() % right;
    180: 
    181:     while (left < right) {

# 1 0x0042C5F3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     assert(strings_addresses);
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 2 0x0042C60F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C60F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C60F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:29:37, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:29:49

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Целочисленное деление на ноль.

#1: Исключение EXCEPTION_INT_DIVIDE_BY_ZERO (0xC0000094) при выполнении кода по адресу 0x0042C390 в функции Partition() в файле C:/CodeBlocks/Onegin/Onegin.cpp на строке 179 в модуле C:\CodeBlocks\Onegin\Onegin.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x864 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C390 in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (179):

    177:     size_t ends = right;
    178: 
=>  179:     size_t mid = left + rand() % right;
    180: 
    181:     while (left < right) {

# 1 0x0042C5F3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     assert(strings_addresses);
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 2 0x0042C60F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C60F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C60F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042BD15 in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (41):

     39: 
     40:     text_read(&text);
=>   41:     Sort(text.strings_addresses, 0, text.nstrings - 1);
     42:     print_text(&text);
     43:     destroy_text(&text);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:29:37, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:29:49

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x3C28 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C60A in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     assert(strings_addresses);
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 2 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:30:35, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:30:47

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x3C28 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C60A in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     assert(strings_addresses);
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 2 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C626 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:30:35, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:30:47

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x2F90 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C633 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (236):

    234:     assert(strings_addresses);
    235: 
=>  236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
    238:     Sort(strings_addresses, left, mid);

# 2 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:42:04, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:42:16

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x2F90 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C633 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (236):

    234:     assert(strings_addresses);
    235: 
=>  236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
    238:     Sort(strings_addresses, left, mid);

# 2 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C64F in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:42:04, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:42:16

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x290C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C62D in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (236):

    234:     }
    235: 
=>  236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
    238:     Sort(strings_addresses, left, mid);

# 2 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:43:56, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:44:08

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x290C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C62D in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (236):

    234:     }
    235: 
=>  236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
    238:     Sort(strings_addresses, left, mid);

# 2 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C649 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 12 2023 22:43:56, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 12 2023 22:44:08

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x858 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C61B in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (236):

    234:     }
    235: 
=>  236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
    238:     Sort(strings_addresses, left, mid);

# 2 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 14 2023 10:43:09, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 14 2023 10:43:16

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x858 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C61B in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (236):

    234:     }
    235: 
=>  236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
    238:     Sort(strings_addresses, left, mid);

# 2 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 14 2023 10:43:09, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 14 2023 10:43:15

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0xCA8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C61B in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (236):

    234:     }
    235: 
=>  236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
    238:     Sort(strings_addresses, left, mid);

# 2 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:09:35, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:09:41

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0xCA8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C61B in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (236):

    234:     }
    235: 
=>  236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
    238:     Sort(strings_addresses, left, mid);

# 2 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C637 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     size_t mid = Partition(strings_addresses, left, right);
    237: 
=>  238:     Sort(strings_addresses, left, mid);
    239: 
    240:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:09:35, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:09:41

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x1BA0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C687 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:11:47, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:11:54

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x1BA0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C687 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:11:47, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:11:53

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x2A00 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C687 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:13:04, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:13:11

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x2A00 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C687 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:13:04, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:13:10

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x3A30 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C687 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:14:01, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:14:07

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x3A30 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C687 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:14:01, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:14:08

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x38B8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C687 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:15:02, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:15:08

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x38B8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C687 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:15:02, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:15:09

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x137C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:15:48, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:15:54

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x137C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:15:48, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:15:54

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x3338 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:16:32, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:16:39

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x3338 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:16:32, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:16:38

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x2BCC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:17:43, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:17:49

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x770E68B0 в функции _threadid() в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x2BCC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E68B0 in C:\Windows\System32\msvcrt.dll: _threadid()

# 1 0x0042C6A3 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (238):

    236:     }
    237: 
=>  238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
    240:     Sort(strings_addresses, left, mid);

# 2 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 3 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C6BF in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (240):

    238:     size_t mid = Partition(strings_addresses, left, right);
    239: 
=>  240:     Sort(strings_addresses, left, mid);
    241: 
    242:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 17:17:43, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 17:17:48

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABB2 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x214 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABB2 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()

# 2 0x0042C590 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (227):

    225:     }
    226: 
=>  227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
    229:     Sort(strings_addresses, left, mid);

# 3 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 20:57:41, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 20:57:48

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABB2 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x214 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABB2 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()

# 2 0x0042C590 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (227):

    225:     }
    226: 
=>  227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
    229:     Sort(strings_addresses, left, mid);

# 3 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 4 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 5 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 6 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 7 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5AC in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 20:57:41, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 20:57:47

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABC5 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x38E0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABC5 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()
# 1 0x770E68C6 in C:\Windows\System32\msvcrt.dll: _threadid()
# 2 0x770AFB33 in C:\Windows\System32\msvcrt.dll: isalpha_l()
# 3 0x770AFF55 in C:\Windows\System32\msvcrt.dll: isalpha()

# 4 0x0042C7CC in C:\CodeBlocks\Onegin\Onegin.exe: Strcmp() at C:/CodeBlocks/Onegin/Onegin.cpp (265):

    263:     while (str1[nchar1] != '\0' && str2[nchar2] != '\0') {
    264: 
=>  265:         if (!isalpha(str1[nchar1])) {
    266: 
    267:             nchar1++;

# 5 0x0042C41B in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (197):

    195:     while (left < right) {
    196: 
=>  197:         if (Strcmp(strings_addresses[left], mid) <= 0) {
    198: 
    199:             left++;

# 6 0x0042C59A in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (227):

    225:     }
    226: 
=>  227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
    229:     Sort(strings_addresses, left, mid);

# 7 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 20:58:42, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 20:58:49

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABC5 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x38E0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABC5 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()
# 1 0x770E68C6 in C:\Windows\System32\msvcrt.dll: _threadid()
# 2 0x770AFB33 in C:\Windows\System32\msvcrt.dll: isalpha_l()
# 3 0x770AFF55 in C:\Windows\System32\msvcrt.dll: isalpha()

# 4 0x0042C7CC in C:\CodeBlocks\Onegin\Onegin.exe: Strcmp() at C:/CodeBlocks/Onegin/Onegin.cpp (265):

    263:     while (str1[nchar1] != '\0' && str2[nchar2] != '\0') {
    264: 
=>  265:         if (!isalpha(str1[nchar1])) {
    266: 
    267:             nchar1++;

# 5 0x0042C41B in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (197):

    195:     while (left < right) {
    196: 
=>  197:         if (Strcmp(strings_addresses[left], mid) <= 0) {
    198: 
    199:             left++;

# 6 0x0042C59A in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (227):

    225:     }
    226: 
=>  227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
    229:     Sort(strings_addresses, left, mid);

# 7 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5B6 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 20:58:42, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 20:58:48

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABC5 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x4320 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABC5 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()
# 1 0x770E68C6 in C:\Windows\System32\msvcrt.dll: _threadid()
# 2 0x770AFB33 in C:\Windows\System32\msvcrt.dll: isalpha_l()
# 3 0x770AFF55 in C:\Windows\System32\msvcrt.dll: isalpha()

# 4 0x0042C7DA in C:\CodeBlocks\Onegin\Onegin.exe: Strcmp() at C:/CodeBlocks/Onegin/Onegin.cpp (265):

    263:     while (str1[nchar1] != '\0' && str2[nchar2] != '\0') {
    264: 
=>  265:         if (!isalpha(str1[nchar1])) {
    266: 
    267:             nchar1++;

# 5 0x0042C41B in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (197):

    195:     while (left < right) {
    196: 
=>  197:         if (Strcmp(strings_addresses[left], mid) <= 0) {
    198: 
    199:             left++;

# 6 0x0042C5A8 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (227):

    225:     }
    226: 
=>  227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
    229:     Sort(strings_addresses, left, mid);

# 7 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 20:59:39, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 20:59:46

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABC5 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x4320 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABC5 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()
# 1 0x770E68C6 in C:\Windows\System32\msvcrt.dll: _threadid()
# 2 0x770AFB33 in C:\Windows\System32\msvcrt.dll: isalpha_l()
# 3 0x770AFF55 in C:\Windows\System32\msvcrt.dll: isalpha()

# 4 0x0042C7DA in C:\CodeBlocks\Onegin\Onegin.exe: Strcmp() at C:/CodeBlocks/Onegin/Onegin.cpp (265):

    263:     while (str1[nchar1] != '\0' && str2[nchar2] != '\0') {
    264: 
=>  265:         if (!isalpha(str1[nchar1])) {
    266: 
    267:             nchar1++;

# 5 0x0042C41B in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (197):

    195:     while (left < right) {
    196: 
=>  197:         if (Strcmp(strings_addresses[left], mid) <= 0) {
    198: 
    199:             left++;

# 6 0x0042C5A8 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (227):

    225:     }
    226: 
=>  227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
    229:     Sort(strings_addresses, left, mid);

# 7 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5C4 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (229):

    227:     size_t mid = Partition(strings_addresses, left, right);
    228: 
=>  229:     Sort(strings_addresses, left, mid);
    230: 
    231:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 20:59:39, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 20:59:45

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABC5 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x4F60 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABC5 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()
# 1 0x770E68C6 in C:\Windows\System32\msvcrt.dll: _threadid()
# 2 0x770AFB33 in C:\Windows\System32\msvcrt.dll: isalpha_l()
# 3 0x770AFF55 in C:\Windows\System32\msvcrt.dll: isalpha()

# 4 0x0042C7C6 in C:\CodeBlocks\Onegin\Onegin.exe: Strcmp() at C:/CodeBlocks/Onegin/Onegin.cpp (266):

    264:     while (str1[nchar1] != '\0' && str2[nchar2] != '\0') {
    265: 
=>  266:         if (!isalpha(str1[nchar1])) {
    267: 
    268:             nchar1++;

# 5 0x0042C407 in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (198):

    196:     while (left < right) {
    197: 
=>  198:         if (Strcmp(strings_addresses[left], mid) <= 0) {
    199: 
    200:             left++;

# 6 0x0042C594 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     }
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 7 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 21:00:31, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 21:00:37

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABC5 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x4F60 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABC5 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()
# 1 0x770E68C6 in C:\Windows\System32\msvcrt.dll: _threadid()
# 2 0x770AFB33 in C:\Windows\System32\msvcrt.dll: isalpha_l()
# 3 0x770AFF55 in C:\Windows\System32\msvcrt.dll: isalpha()

# 4 0x0042C7C6 in C:\CodeBlocks\Onegin\Onegin.exe: Strcmp() at C:/CodeBlocks/Onegin/Onegin.cpp (266):

    264:     while (str1[nchar1] != '\0' && str2[nchar2] != '\0') {
    265: 
=>  266:         if (!isalpha(str1[nchar1])) {
    267: 
    268:             nchar1++;

# 5 0x0042C407 in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (198):

    196:     while (left < right) {
    197: 
=>  198:         if (Strcmp(strings_addresses[left], mid) <= 0) {
    199: 
    200:             left++;

# 6 0x0042C594 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     }
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 7 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 21:00:31, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 21:00:37

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABC5 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x2808 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABC5 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()
# 1 0x770E68C6 in C:\Windows\System32\msvcrt.dll: _threadid()
# 2 0x770AFB33 in C:\Windows\System32\msvcrt.dll: isalpha_l()
# 3 0x770AFF55 in C:\Windows\System32\msvcrt.dll: isalpha()

# 4 0x0042C7C6 in C:\CodeBlocks\Onegin\Onegin.exe: Strcmp() at C:/CodeBlocks/Onegin/Onegin.cpp (266):

    264:     while (str1[nchar1] != '\0' && str2[nchar2] != '\0') {
    265: 
=>  266:         if (!isalpha(str1[nchar1])) {
    267: 
    268:             nchar1++;

# 5 0x0042C407 in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (198):

    196:     while (left < right) {
    197: 
=>  198:         if (Strcmp(strings_addresses[left], mid) <= 0) {
    199: 
    200:             left++;

# 6 0x0042C594 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     }
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 7 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 21:00:31, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 21:00:49

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x763DABC5 в функции FlsGetValue() в модуле C:\Windows\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x2808 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x763DABC5 in C:\Windows\System32\KERNELBASE.dll: FlsGetValue()
# 1 0x770E68C6 in C:\Windows\System32\msvcrt.dll: _threadid()
# 2 0x770AFB33 in C:\Windows\System32\msvcrt.dll: isalpha_l()
# 3 0x770AFF55 in C:\Windows\System32\msvcrt.dll: isalpha()

# 4 0x0042C7C6 in C:\CodeBlocks\Onegin\Onegin.exe: Strcmp() at C:/CodeBlocks/Onegin/Onegin.cpp (266):

    264:     while (str1[nchar1] != '\0' && str2[nchar2] != '\0') {
    265: 
=>  266:         if (!isalpha(str1[nchar1])) {
    267: 
    268:             nchar1++;

# 5 0x0042C407 in C:\CodeBlocks\Onegin\Onegin.exe: Partition() at C:/CodeBlocks/Onegin/Onegin.cpp (198):

    196:     while (left < right) {
    197: 
=>  198:         if (Strcmp(strings_addresses[left], mid) <= 0) {
    199: 
    200:             left++;

# 6 0x0042C594 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (228):

    226:     }
    227: 
=>  228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
    230:     Sort(strings_addresses, left, mid);

# 7 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 8 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

# 9 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#10 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#11 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#12 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#13 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#14 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#15 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#16 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#17 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#18 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#19 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#20 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#21 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#22 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#23 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#24 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#25 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#26 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#27 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#28 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#29 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#30 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#31 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#32 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#33 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#34 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#35 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#36 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#37 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#38 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#39 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#40 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#41 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#42 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#43 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#44 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#45 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#46 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#47 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#48 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#49 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#50 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#51 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#52 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#53 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#54 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#55 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#56 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#57 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#58 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#59 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#60 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

#61 0x0042C5B0 in C:\CodeBlocks\Onegin\Onegin.exe: Sort() at C:/CodeBlocks/Onegin/Onegin.cpp (230):

    228:     size_t mid = Partition(strings_addresses, left, right);
    229: 
=>  230:     Sort(strings_addresses, left, mid);
    231: 
    232:     Sort(strings_addresses, mid + 1, right);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 21:00:31, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 21:00:48

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 151, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string < text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x4540 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BFF5 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (151):

    149:         if (text->buffer[number_char] == '\n') {
    150: 
=>  151:             assert(number_string < text->nstrings);
    152: 
    153:             text->buffer[number_char] = '\0';

# 1 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:41:11, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:41:20

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0x28725A0F в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x4980 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C096 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (157):

    155:             text->strings_addresses[number_string++] = {&text->buffer[number_char + 1], 0};
    156: 
=>  157:             printf("string - %s, len - %d\n", text->strings_addresses[--number_string].address, text->strings_addresses[--number_string].len);
    158: 
    159:             text->strings_addresses[number_string - 2].len = len;

# 3 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:42:49, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:43:01

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0x28725A0F в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x4980 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C096 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (157):

    155:             text->strings_addresses[number_string++] = {&text->buffer[number_char + 1], 0};
    156: 
=>  157:             printf("string - %s, len - %d\n", text->strings_addresses[--number_string].address, text->strings_addresses[--number_string].len);
    158: 
    159:             text->strings_addresses[number_string - 2].len = len;

# 3 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:42:49, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:43:01

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xA4D84837 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x32BC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C096 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (157):

    155:             text->strings_addresses[number_string++] = {text->buffer + number_char + 1, 0};
    156: 
=>  157:             printf("string - %s, len - %d\n", text->strings_addresses[--number_string].address, text->strings_addresses[--number_string].len);
    158: 
    159:             text->strings_addresses[number_string - 2].len = len;

# 3 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:43:50, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:44:01

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xA4D84837 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x32BC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C096 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (157):

    155:             text->strings_addresses[number_string++] = {text->buffer + number_char + 1, 0};
    156: 
=>  157:             printf("string - %s, len - %d\n", text->strings_addresses[--number_string].address, text->strings_addresses[--number_string].len);
    158: 
    159:             text->strings_addresses[number_string - 2].len = len;

# 3 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:43:50, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:44:02

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xC15AA571 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0xE1C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C096 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (157):

    155:             text->strings_addresses[number_string++] = {text->buffer + number_char + 1, 0};
    156: 
=>  157:             printf("string - %s, len - %d\n", text->strings_addresses[--number_string].address, text->strings_addresses[--number_string].len);
    158: 
    159:             text->strings_addresses[number_string - 2].len = len;

# 3 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:44:17, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:44:28

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xC15AA571 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0xE1C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C096 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (157):

    155:             text->strings_addresses[number_string++] = {text->buffer + number_char + 1, 0};
    156: 
=>  157:             printf("string - %s, len - %d\n", text->strings_addresses[--number_string].address, text->strings_addresses[--number_string].len);
    158: 
    159:             text->strings_addresses[number_string - 2].len = len;

# 3 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:44:17, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:44:29

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xBF99F8CD в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x4ECC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C0B9 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (158):

    156:             text->strings_addresses[number_string++] = {text->buffer + number_char + 1, 0};
    157: 
=>  158:             printf("string - %s, len - %d\n", text->strings_addresses[--number_string].address, text->strings_addresses[--number_string].len);
    159: 
    160:             text->strings_addresses[number_string - 2].len = len;

# 3 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:45:33, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:45:45

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0xBF99F8CD в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x4ECC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C0B9 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (158):

    156:             text->strings_addresses[number_string++] = {text->buffer + number_char + 1, 0};
    157: 
=>  158:             printf("string - %s, len - %d\n", text->strings_addresses[--number_string].address, text->strings_addresses[--number_string].len);
    159: 
    160:             text->strings_addresses[number_string - 2].len = len;

# 3 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:45:33, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:45:45

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 152, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string < text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x2230 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C023 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (152):

    150:         if (text->buffer[number_char] == '\n') {
    151: 
=>  152:             assert(number_string < text->nstrings);
    153: 
    154:             text->buffer[number_char] = '\0';

# 1 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:46:56, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:47:07

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe, файл: C:\CodeBlocks\Onegin\Onegin.cpp, строка: 154, функция: bool text_read(Text*),

Сообщение: ВНЕЗАПНО: Логическая ошибка: Неверно, что "number_string < text->nstrings".

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005052FC (32-bit), Flags: Cmdre0, Thread: 0x422C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C038 in C:\CodeBlocks\Onegin\Onegin.exe: text_read() at C:/CodeBlocks/Onegin/Onegin.cpp (154):

    152:         if (text->buffer[number_char] == '\n') {
    153: 
=>  154:             assert(number_string < text->nstrings);
    155: 
    156:             text->buffer[number_char] = '\0';

# 1 0x0042BD2E in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (70):

     68:     file_read(&text);
     69: 
=>   70:     text_read(&text);
     71: 
     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 15 2023 22:47:56, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 15 2023 22:48:08

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0x00000026 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x1BB8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C78E in C:\CodeBlocks\Onegin\Onegin.exe: Sort_choice() at C:/CodeBlocks/Onegin/Onegin.cpp (351):

    349:             break;
    350:         }
=>  351:         printf("str1 - %s, str2 - %s\n", strings_addresses[min_str], strings_addresses[nstr]);
    352:         Swap(strings_addresses, min_str, nstr);
    353:         printf("str1 - %s, str2 - %s\n", strings_addresses[min_str], strings_addresses[nstr]);

# 3 0x0042BD4A in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (74):

     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);
     73: 
=>   74:     Sort_choice(text.strings_addresses, text.nstrings, false);
     75:     print_text(&text);
     76:     putchar('\n');

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 16 2023 00:50:50, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 16 2023 00:50:55

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\CodeBlocks\Onegin\Onegin.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770FB5CC в функции ungetwc(). Попытка прочесть данные по адресу 0x00000026 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400], Instance: 0x005062FC (32-bit), Flags: Cmdre0, Thread: 0x1BB8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x770FB5CC in C:\Windows\System32\msvcrt.dll: ungetwc()
# 1 0x770F4D0B in C:\Windows\System32\msvcrt.dll: printf()

# 2 0x0042C78E in C:\CodeBlocks\Onegin\Onegin.exe: Sort_choice() at C:/CodeBlocks/Onegin/Onegin.cpp (351):

    349:             break;
    350:         }
=>  351:         printf("str1 - %s, str2 - %s\n", strings_addresses[min_str], strings_addresses[nstr]);
    352:         Swap(strings_addresses, min_str, nstr);
    353:         printf("str1 - %s, str2 - %s\n", strings_addresses[min_str], strings_addresses[nstr]);

# 3 0x0042BD4A in C:\CodeBlocks\Onegin\Onegin.exe: main() at C:/CodeBlocks/Onegin/Onegin.cpp (74):

     72:     //Sort(text.strings_addresses, 0, text.nstrings - 1);
     73: 
=>   74:     Sort_choice(text.strings_addresses, text.nstrings, false);
     75:     print_text(&text);
     76:     putchar('\n');

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 172, Date: 2023-08-12 11:12:24 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\codeblocks\mingw\include\txlib.h
Compiled:	Sep 16 2023 00:50:50, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 16 2023 00:50:55

Run file:	C:\CodeBlocks\Onegin\Onegin.exe
Directory:	C:\CodeBlocks\Onegin

--------------------------------------------------
